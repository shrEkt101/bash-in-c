20-March-2025 13:21:33---Student: project_m4
20-March-2025 13:21:33----Code compiles:PASS
Launch Suite:
  20-March-2025 13:21:33----exit causes process to terminate with correct return code:OK
  20-March-2025 13:21:37----Shell message is displayed, uses exit to test:OK
Result:PASS
Unknown Command Message:
  20-March-2025 13:21:41----Unknown command should display corresponding message:NOT OK
  20-March-2025 13:21:45----Multiple unknown commands:NOT OK
Result:FAIL
Long Command Message:
  20-March-2025 13:21:49----A not-too-long and legal command input is valid:OK
  20-March-2025 13:21:53----Long command input is invalid:OK
  20-March-2025 13:21:57----Long command message takes priority:OK
Result:PASS
Echo Simple Messages:
  20-March-2025 13:22:01----Echo of one character displays correctly:OK
  20-March-2025 13:22:05----Echo of simple message displays correctly:OK
  20-March-2025 13:22:09----Echo of simple message displays correctly v3:OK
  20-March-2025 13:22:13----Echo of simple message displays correctly v3:OK
  20-March-2025 13:22:17----Echo of simple message does not show errors:OK
Result:PASS
Echo Special Characters:
  20-March-2025 13:22:21----Echo of mixed message displays correctly:OK
  20-March-2025 13:22:25----echo with quotes has no special meaning:OK
  20-March-2025 13:22:29----echo ignores extra spaces:OK
Result:PASS
Multiple Commands:
  20-March-2025 13:22:33----Two echo commands display correctly:OK
  20-March-2025 13:22:37----Two echo commands do not show error:OK
  20-March-2025 13:22:41----Echo commands work while other commands error:OK
Result:PASS
Hidden - echo with hidden message and near limits:
  20-March-2025 13:22:45----echo with a random message displays correctly:OK
  20-March-2025 13:22:49----Echo command with 126 characters is displayed correctly:OK
  20-March-2025 13:22:53----Echo command with 129 characters triggers an error message:OK
Result:PASS
Hidden - echo does not display an extra space:
  20-March-2025 13:22:57----Echo command does not print trailing spaces:OK
  20-March-2025 13:23:01----Echo command does not print leading spaces:OK
  20-March-2025 13:23:05----Echo command does not print extra spaces in middle:OK
Result:PASS
Hidden - valid commands as a prefix:
  20-March-2025 13:23:09----Invalid command given that includes a valid command as a prefix:NOT OK
  20-March-2025 13:23:13----Invalid command given that includes a valid command as a prefix:NOT OK
Result:FAIL
Hidden - Variable Definition Error Handling:
  20-March-2025 13:23:17----Long variable declaration is prohibited:OK
Result:PASS
Hidden - Variable Expansion in Assignment:
  20-March-2025 13:23:19----Test variable expansion during variable assignment:OK
Result:PASS
Hidden - Large Redefine:
  20-March-2025 13:23:21----Declare, redefine and access 100 variables:OK
Result:PASS
Simple variables accesses:
  20-March-2025 13:23:41----Declare and access a single variable:OK
  20-March-2025 13:23:43----Declare and access a single variable:OK
  20-March-2025 13:23:45----Tests for correct evaluation of variable expansions containing only intitialized variables:OK
  20-March-2025 13:23:47----Tests for correct evaluation of variable expansions containing variables plus plaintext and uninitialized variables:OK
Result:PASS
Variable integration with other commands:
  20-March-2025 13:23:49----Declare a single variable:OK
  20-March-2025 13:23:51----Declare and access two variables:OK
Result:PASS
Custom variable accesses:
  20-March-2025 13:23:53----Access variables in separate lines:OK
  20-March-2025 13:23:55----Access variables in separate lines v2:OK
Result:PASS
Echo without variables displays plain text:
  20-March-2025 13:23:57----Variables access with $ is bound to name:OK
  20-March-2025 13:23:59----Non-existing variable displays as an empty string:OK
Result:PASS
Variable values can be redefined:
  20-March-2025 13:24:01----Variable value is redefined appropriately:OK
  20-March-2025 13:24:03----Variable value is redefined appropriately v2:OK
Result:PASS
Variable formatting edge cases:
  20-March-2025 13:24:05----Variables accesses separate by the first equal:OK
  20-March-2025 13:24:07----Variable declaration with spaces is not supported:OK
Result:PASS
Advanced tests:
  20-March-2025 13:24:09----Declare and access 100 variables:OK
Result:PASS
correct cat argument setup:
  20-March-2025 13:24:19----Cat on a file that contains one word:OK
Result:PASS
cat correctly reads sample files:
  20-March-2025 13:24:23----Cat on a file that contains multiple words:OK
  20-March-2025 13:24:27----Cat on a file that contains multiple lines:OK
Result:PASS
correct wc argument setup:
  20-March-2025 13:24:31----wc on an empty file:OK
Result:PASS
wc reports correct counts on sample files:
  20-March-2025 13:24:35----wc on a file that contains mutliple lines:OK
  20-March-2025 13:24:39----wc on a file that contains mutliple words in a line:OK
  20-March-2025 13:24:43----wc on a file that contains blank lines:OK
Result:PASS
Sample ls runs:
  20-March-2025 13:24:47----Create a single sub-directory with a single file:OK
  20-March-2025 13:24:51----Create a single sub-directory with multiple files:OK
  20-March-2025 13:24:57----ls a directory:OK
Result:PASS
Sample cd runs:
  20-March-2025 13:25:03----cd into a directory and display the files:OK
  20-March-2025 13:25:09----cd into a nested directory and display the files:OK
Result:PASS
ls error handling:
  20-March-2025 13:25:15----ls on an invalid path reports an error:NOT OK
Result:FAIL
ls handles edge cases correctly:
  20-March-2025 13:25:19----ls a single file through a variable identifier:NOT OK
  20-March-2025 13:25:23----Create a single sub-directory, and ls into that directory:OK
Result:FAIL
ls filters files correctly:
  20-March-2025 13:25:27----ls correctly filters files:OK
  20-March-2025 13:25:31----ls correctly filters files v2:OK
Result:PASS
Recursive ls displays files correctly:
  20-March-2025 13:25:35----Recursive ls with depth 1 does not capture inner files:NOT OK
NOT OK
OK
  20-March-2025 13:25:41----Recursive ls with depth 2 captures inner files:NOT OK
NOT OK
OK
  20-March-2025 13:25:47----Recursive ls supports --d argument before --rec:NOT OK
NOT OK
OK
Result:FAIL
Advanced Tests:
  20-March-2025 13:25:53----Recursive ls correctly searches files in sub-directories:OK
Result:PASS
Hidden - Advanced wc tests:
  20-March-2025 13:25:59----wc on an arbitrary file:OK
  20-March-2025 13:26:03----wc on an a file with many 0s:NOT OK
Result:FAIL
Hidden - Advanced ls tests:
  20-March-2025 13:26:09----Recursive ls correctly gathers files from an arbitrary deep tree:NOT OK
  20-March-2025 13:26:19----Recursive ls captures multiple sub-directories:NOT OK
OK
  20-March-2025 13:26:25----ls with bad arguments:NOT OK
  20-March-2025 13:26:29----ls with an absolute path:OK
  20-March-2025 13:26:35----cd with an absolute path:OK
Result:FAIL
Hidden - Advanced ls path tests:
  20-March-2025 13:26:41----ls a grandparent directory and display the files:OK
  20-March-2025 13:26:47----ls a great grandparent directory and display the files:NOT OK
  20-March-2025 13:26:53----ls a complex path and display the files:NOT OK
Result:FAIL
Hidden - Incorrect number of arguments:
  20-March-2025 13:26:59----Multiple paths in a single ls command:OK
  20-March-2025 13:27:05----Multiple paths in a single cd command:NOT OK
  20-March-2025 13:27:11----Multiple paths in a single cat command:NOT OK
  20-March-2025 13:27:17----Multiple paths in a single wc command:NOT OK
Result:FAIL
Sample echo pipes:
  20-March-2025 13:27:23----Piping echo to echo works the same as normal echo:NOT OK
  20-March-2025 13:27:27----Piping echo to echo works the same as normal echo:NOT OK
Result:FAIL
Sample ls & cd pipes:
  20-March-2025 13:27:31----Piping the output of ls to ls works the same as normal ls:NOT OK (TIMEOUT)
  20-March-2025 13:27:35----Pipes involving cd do not change the current directory:NOT OK
Result:FAIL
Sample wc pipe:
  20-March-2025 13:27:39----Pipe the output of ls to wc displays valid counts:OK
  20-March-2025 13:27:43----Pipe the output of echo to wc displays valid counts:NOT OK
Result:FAIL
Sample cat pipes:
  20-March-2025 13:27:47----Cat reading input from echo:OK
  20-March-2025 13:27:51----Cat builtin supports pipes:NOT OK
Result:FAIL
Pipes with variables:
  20-March-2025 13:27:55----Variable declaration in pipes is not reflected:NOT OK (TIMEOUT)
  20-March-2025 13:27:59----Variable re-define in pipes is not reflected:NOT OK (TIMEOUT)
Result:FAIL
Pipes Error Handling:
  20-March-2025 13:28:03----Pipe line cannot exceed the character limit:OK
  20-March-2025 13:28:07----A failing command does not stop the pipe chain:NOT OK (TIMEOUT)
Result:FAIL
Pipe Edge Cases:
  20-March-2025 13:28:11----Spaces are not required within pipes:OK
  20-March-2025 13:28:15----Pipe to a command that does not exist reports unknown error:NOT OK (TIMEOUT)
Result:FAIL
Three Level pipes:
  20-March-2025 13:28:19----Cat builtin supports nested pipes:NOT OK
  20-March-2025 13:28:23----Three-level pipe with echo, cat, and wc:NOT OK
Result:FAIL
Hidden - 4 level pipes:
  20-March-2025 13:28:27----Four-level pipe with echo, cat, and wc:NOT OK
  20-March-2025 13:28:31----Four level pipe involving cat and wc:NOT OK
Result:FAIL
Bash Commands are executed correctly:
  20-March-2025 13:28:35----Bash Builtins are fetched and do not report errors:OK
  20-March-2025 13:28:39----Command that do not exist report errors:OK
  20-March-2025 13:28:43----tail command works correctly:OK
Result:PASS
Bash Commands support pipes:
  20-March-2025 13:28:47----tail command supports pipes:NOT OK
  20-March-2025 13:28:51----head command supports pipes:OK
Result:FAIL
Sample bg runs:
  20-March-2025 13:28:55----A simple background echo correctly completes:NOT OK (TIMEOUT)
  20-March-2025 13:29:01----Shell can execute other commands while a background process runs:NOT OK (TIMEOUT)
  20-March-2025 13:29:07----Shell can execute multiple background processes:NOT OK (TIMEOUT)
Result:FAIL
Sample ps runs:
  20-March-2025 13:29:13----ps command shows a background process:NOT OK (TIMEOUT)
  20-March-2025 13:29:19----ps command shows multiple background processes:NOT OK (TIMEOUT)
Result:FAIL
Background jobs finish correctly:
  20-March-2025 13:29:25----Background process completes with a corresponding DONE message:NOT OK (TIMEOUT)
  20-March-2025 13:29:31----Background process is DONE after terminated by a kill:NOT OK (TIMEOUT)
Result:FAIL
bg edge cases:
  20-March-2025 13:29:37----Background process counts reset to 1 after all processes complete:NOT OK (TIMEOUT)
  20-March-2025 13:29:43----Background process line cannot exceed character limits:OK
Result:FAIL
bg integrations tests:
  20-March-2025 13:29:49----Pipes work correctly while background process runs:NOT OK (TIMEOUT)
Result:FAIL
Shell survives a control C:
  20-March-2025 13:29:55----A shell can survive a SIGINT signal:OK
Result:PASS
Sample kill runs:
  20-March-2025 13:29:59----A shell can terminate another shell:OK
  20-March-2025 13:30:03----A shell can terminate another shell by sending a signal:OK
Result:PASS
Kill error handling:
  20-March-2025 13:30:07----kill reports an error if the pid is invalid:NOT OK
  20-March-2025 13:30:11----Program reports an error if the signal is invalid:NOT OK
Result:FAIL
Kill Integration Tests:
  20-March-2025 13:30:15----A shell can terminate another shell while accepting variables:OK
Result:PASS
Hidden - correct counts for background job termination:
  23-March-2025 16:19:05----Background jobs terminate with correct counts after kill:NOT OK (TIMEOUT)
Result:FAIL
Hidden - pipes work correctly during background process:
  23-March-2025 16:19:09----Pipes work correctly during background process:NOT OK (TIMEOUT)
  23-March-2025 16:19:13----ps command shows multiple background processes, including one with a pipe:NOT OK (TIMEOUT)
Result:FAIL
23-March-2025 16:19:23--- Tests Passed 30.0/57
23-March-2025 16:19:23 FINISHED
